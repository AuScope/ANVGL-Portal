/**
 * A Ext.panel.Panel extension for forming the base of all Search Facet widgets.
 *
 * All implementors should implement a "change" event
 *
 */
Ext.define('vegl.widgets.search.BaseFacetWidget', {
    extend : 'Ext.panel.Panel',

    map: null,

    constructor : function(config) {
        this.map = config.map;

        var headerItems = [];
        this.generateHeaderItemConfigs(headerItems);

        Ext.apply(config, {
            header: {
                items: headerItems
            }
        });

        this.callParent(arguments);
    },

    initComponent: function() {
        this.on('afterrender', this.installToolTips, this);
        this.callParent(arguments);
    },

    /**
     * Can be extended in base classes.
     */
    installToolTips: function() {
        Ext.create('Ext.tip.ToolTip', {
            target: this.down('#cleartool').getEl(),
            html: 'Remove this search filter'
        });
    },

    /**
     * function(facet, newRegistryId)
     *
     * Override this to be notified when the user selects a new registry (or when the first registry is loaded)
     */
    onRegistryChange: null,

    generateHeaderItemConfigs: function(itemArray) {
        itemArray.push({
            xtype : 'image',
            itemId: 'cleartool',
            width : 16,
            height : 16,
            src : 'img/clear.png',
            style: {
                cursor: 'pointer'
            },
            plugins : [{
                ptype: 'clickableimage',
                stopEvent: true
            }],
            listeners : {
                click : function() {
                    this.clearSearch();
                    this.collapse();
                },
                scope: this
            }
        });
    },

    /**
     * Called when the parent panel is requesting that this facet clear its search contents.
     *
     * function()
     *
     * returns - nothing
     */
    clearSearch : portal.util.UnimplementedFunction,

    /**
     * Called when the parent search panel wishes to get any search facets generated by this widget
     *
     * function()
     *
     * returns - vegl.models.SearchFacet[] - An array of search facets which when AND'ed together represent this widget's contribution
     * to the overall search filtering. If null then this widget is NOT currently filtering.
     */
    extractSearchFacets : portal.util.UnimplementedFunction
});