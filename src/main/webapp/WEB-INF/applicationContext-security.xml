<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans 
                                 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                                 http://www.springframework.org/schema/security 
                                 http://www.springframework.org/schema/security/spring-security-3.0.xsd">
                                 
    <global-method-security secured-annotations="enabled" />
    
    <http auto-config="false" 
          entry-point-ref="entryPoint" 
          access-denied-page="/access_error.html" >
          
        <!-- <intercept-url pattern="/downloadProxy\?urls**" access="ROLE_DOWNLOAD" /> -->   
        <intercept-url pattern="/admin.html" access="ROLE_ADMINISTRATOR" />
        <intercept-url pattern="/**" filters="none" />
      
        <session-management session-fixation-protection="none" />
            
        <custom-filter position="PRE_AUTH_FILTER" ref="preAuthenticatedProcessingFilter"/>
    </http>
    
    <beans:bean id="entryPoint"
        class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" >
    </beans:bean>
    
    <authentication-manager alias="authenticationManager" >
        <authentication-provider ref='preAuthenticatedAuthenticationProvider' />
    </authentication-manager>
    
    <beans:bean id="preAuthenticatedProcessingFilter"
                class="org.auscope.portal.server.web.security.PreAuthenticatedProcessingFilter">
        <beans:property name="authenticationManager" ref="authenticationManager" />
    </beans:bean>
    
    <beans:bean id="preAuthenticatedAuthenticationProvider" 
                class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
        <beans:property name="preAuthenticatedUserDetailsService">
            <beans:bean id="userDetailsServiceWrapper"
                        class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
                <beans:property name="userDetailsService" ref="myUserDetailsService"/>
            </beans:bean>
        </beans:property>
    </beans:bean>
   
    <beans:bean id="myUserDetailsService"
                class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>

    <!-- This userDetailsService implementation is handy for quick testing   
    <authentication-provider>
        <user-service id="userDetailsService">
            <user password="password" name="Jarek.Sanders@csiro.au" authorities="ROLE_JOB_SUBMISSION" />
        </user-service>
    </authentication-provider>
    -->

</beans:beans>