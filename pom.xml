<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.auscope.portal</groupId>
    <artifactId>VGL-Portal</artifactId>
    <packaging>war</packaging>
    <version>0.0.1-SNAPSHOT</version>
    <name>VGL-Portal</name>
    <url>https://confluence.csiro.au/display/VGL/VGL</url>
    <issueManagement>
        <system>Jira</system>
        <url>https://jira.csiro.au/projects/VGL</url>
    </issueManagement>
    <scm>
        <connection>scm:git:https://github.com/AuScope/ANVGL-Portal</connection>
        <developerConnection>scm:git:https://github.com/AuScope/ANVGL-Portal</developerConnection>
        <url>https://github.com/AuScope/ANVGL-Portal</url>
    </scm>

    <!-- Build Configuration -->
    <organization>
        <name>CSIRO</name>
        <url>http://csiro.au</url>
    </organization>
    
    <!-- XXX Migration -->
    <build>
        <finalName>VGL-Portal</finalName>
        <plugins>
        
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <!--<version>3.1</version>-->
                <configuration>
                    <source>${targetJdk}</source>
                    <target>${targetJdk}</target>
                    <compilerVersion>${targetJdk}</compilerVersion>
                    <verbose>true</verbose>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.3</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                    <timestampFormat>{0,date,dd-MM-yyyy HH:mm}</timestampFormat>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <!--<version>2.4</version>-->
                <version>2.6</version>
                <configuration>
                    <overlays>
                        <!--
                            m2e consumes overlay dependencies causing the
                            portal-core jar to be omitted when running in
                            tomcat. Workaround is to use the sources jar
                            for the overlay; this then has to be a provided
                            dependency to prevent inclusion in the war.
                        -->
                        <overlay>
                               <groupId>org.auscope.portal</groupId>
                               <artifactId>portal-core</artifactId>
                               <classifier>sources</classifier>
                               <type>jar</type>
                               <includes>
                                    <include>portal-core/**/*</include>
                               </includes>
                        </overlay>
                    </overlays>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                        <manifestEntries>
                            <Implementation-Build>${buildNumber}</Implementation-Build>
                            <projectName>${project.name}</projectName>
                            <version>${project.version}</version>
                            <buildDate>${timestamp}</buildDate>
                            <osName>${os.name}</osName>
                            <osVersion>${os.version}</osVersion>
                            <javaVendor>${java.vendor}</javaVendor>
                            <javaVersion>${java.version}</javaVersion>
                            <javaVmVersion>${java.vm.version}</javaVmVersion>
                            <javaVmVendor>${java.vm.vendor}</javaVmVendor>
                        </manifestEntries>
                    </archive>
                    <goals>
                        <goal>manifest</goal>
                    </goals>
                </configuration>
                <!-- This is needed to create ${basedir}/src/main/webapp/META-INF/MANIFEST.MF file -->
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <!--<version>${jetty.version}</version>-->
                <version>9.4.14.v20181114</version>
                <configuration>
                    <webApp>
                        <contextPath>/VGL-Portal</contextPath>
                    </webApp>
                </configuration>
            </plugin>
            
            <!-- Powermock - Unit test work around... -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <argLine>-XX:-UseSplitVerifier</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <classpathContainers>
                        <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
                    </classpathContainers>
                    <wtpversion>2.0</wtpversion>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
                <configuration>
                    <!--
                    <excludes>
                        Exclude Ext JS
                        <exclude>portal-core/**</exclude>
                        <exclude>external/**</exclude>
                    </excludes>
                    -->
                    <includes>
                        <include>js/**</include>
                    </includes>
                    <nosuffix>true</nosuffix>
                </configuration>
                <version>1.4.0</version>
            </plugin>
            <!--
                This is needed for Emma Coverage to work with unit tests
                that use PowerMock's JMock library. The latest alpha
                version i.e. 1.0-alpha-3 will fail those unit tests.
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>emma-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.1.201405082137</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule implementation="org.jacoco.maven.RuleConfiguration">
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.50</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.jacoco</groupId>
                                        <artifactId>
                                            jacoco-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [0.7.1.201405082137,)
                                        </versionRange>
                                        <goals>
                                            <goal>prepare-agent</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    

    <!-- Project properties -->
    <properties>
        <!--<jetty.version>9.3.7.v20160115</jetty.version>-->
        <!--<hibernate.version>3.6.7.Final</hibernate.version>-->
        
        <hibernate.version>5.4.1.Final</hibernate.version>
        <hibernate.validator.version>6.0.14.Final</hibernate.validator.version>
        
        
        <log4j.version>1.2.16</log4j.version>
        <targetJdk>1.8</targetJdk>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <powermock.version>1.6.3</powermock.version>
        <portal.core.version>2.1.0-SNAPSHOT</portal.core.version>
        <httpclient.version>4.3.5</httpclient.version>
        <!--<mysql.version>5.1.38</mysql.version>-->
        <mysql.version>8.0.14</mysql.version>
        <jackson.version>2.9.0</jackson.version>
        
        <!--
        <spring.version>Cairo-RELEASE</spring.version>
        <spring.security.version>5.1.3.RELEASE</spring.security.version>
        
        <spring.boot.version>2.1.2.RELEASE</spring.boot.version>
        -->
        
    </properties>
    
    
    <!-- XXX Migration -->
    <!--
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.spring.platform</groupId>
                <artifactId>platform-bom</artifactId>
                <version>2.0.8.RELEASE</version>
                <version>${spring.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    -->
    
    
    <!-- XXX Migrate -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.2.RELEASE</version>
    </parent>
    

    <repositories>
        <!--
        <repository>
            <id>osgeo</id>
            <name>Open Source Geospatial Foundation Repository</name>
            <url>http://download.osgeo.org/webdav/geotools</url>
        </repository>
        -->
        <!-- <repository>
             <id>mygrid</id>
             <name>MyGrid Repository</name>
             <url>http://build.mygrid.org.uk/maven/repository/</url>
             </repository> -->
         <!--
        <repository>
            <id>geotoolkit</id>
            <name>Geo Toolkit Repository</name>
            <url>http://maven.geotoolkit.org/</url>
        </repository>
        -->
        
        <repository>
            <id>CSIRO AuScope Repo</id>
            <name>AuScope Nexus - PortalRepo</name>
            <url>https://cgmaven.it.csiro.au/nexus/repository/PortalRepository/</url>
        </repository>
        <repository>
            <id>CSIRO AuScope Repo PROMS-java</id>
            <name>AuScope Nexus - PROMS-Java</name>
            <url>https://cgmaven.it.csiro.au/nexus/repository/PROMS-java-snapshot</url>
            <releases><enabled>false</enabled></releases>
            <snapshots><enabled>true</enabled></snapshots>
        </repository>
    </repositories>

    <!-- Dependencies -->
	<dependencies>

	
	   <!-- XXX Migration -->
	   <!-- Check if we need this if we use spring-boot-starter-web -->
	   <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <!--
            <exclusions>
			    <exclusion>
			        <groupId>org.springframework.boot</groupId>
			        <artifactId>spring-boot-starter-logging</artifactId>
			    </exclusion>
			</exclusions>
			-->
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            
            <!--
             org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'methodValidationPostProcessor' defined in class path resource [org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class]
             Note: exclusion didn't help
             -->
             <!--
            <exclusions>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate-validator</artifactId>
                </exclusion>
            </exclusions>
            -->
            <!--
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
            -->
        </dependency>
        
        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        -->
        
        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <version>2.1.2.RELEASE</version>
        </dependency>
        -->
        
        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        -->

        <!-- JPA (Spring Boot) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!--
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        -->
        
        <!-- Security (Spring Boot) -->
        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-jose</artifactId>
        </dependency>
        -->

	
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.54</version>
		</dependency>
        <dependency>
            <groupId>proms-clients-java</groupId>
            <artifactId>proms-clients-java</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        
        
        <!-- XXX Migration -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            
            <version>6.0.14.Final</version>
            
            <exclusions>
                <exclusion>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-impl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.auscope.portal</groupId>
            <artifactId>portal-core</artifactId>
            <version>${portal.core.version}</version>
        </dependency>

        
        
        <!-- m2e overlay workaround (see above) -->
        <dependency>
            <groupId>org.auscope.portal</groupId>
            <artifactId>portal-core</artifactId>
            <version>${portal.core.version}</version>
            <classifier>sources</classifier>
            <scope>provided</scope>
        </dependency>
        
        
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.7</version>
        </dependency>
        <dependency>
            <!--<groupId>commons-dbcp</groupId>-->
            <groupId>org.apache.commons</groupId>
            <!--<artifactId>commons-dbcp</artifactId>-->
            <artifactId>commons-dbcp2</artifactId>
            <version>2.5.0</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.4.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <!--<version>4.1.0.Final</version>-->
            <version>6.0.14.Final</version>
        </dependency>
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.24.1-GA</version>
        </dependency>
        <dependency>
            <groupId>com.jhlabs</groupId>
            <artifactId>javaproj</artifactId>
            <version>1.0</version>
        </dependency>
        
        
        <!-- For VelocityEngineFactoryBean -->
        <!--
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        -->
        
        
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>5.1.3.RELEASE</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-expression</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-aop</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-jwt</artifactId>
            <version>1.0.10.RELEASE</version>
            <exclusions>
                <exclusion>
                    <artifactId>bcprov-jdk15on</artifactId>
                    <groupId>org.bouncycastle</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>5.1.4.RELEASE</version>
            <scope>compile</scope>
        </dependency>
        
        
        <!-- Added for job monitoring -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.2.2</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Added for email templating -->
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.7</version>
        </dependency>
        
        <!--
        <dependency>
            <groupId>edu.ucar</groupId>
            <artifactId>netcdf</artifactId>
            <version>4.1</version>
            <optional>false</optional>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-jdk14</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        -->
        <dependency>
		    <groupId>edu.ucar</groupId>
		    <artifactId>netcdf</artifactId>
		    <version>4.2.20</version>
        </dependency>
        
        <!-- Added for using PowerMock with JMock -->
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-support</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        
        <!--
            We depend on the EasyMock API but exclude the EasyMock dependency. The reason
            is that PowerMock Whitebox needs a "org.powermock.reflect.spi.ProxyFramework"
            implementation in order to work correctly. This implementation is provided by
            the extension API:s. Since JMock uses CGLib it can reuse the
            "org.powermock.api.extension.proxyframework.ProxyFrameworkImpl" in the
            PowerMock EasyMock API. An alternative to depend on this class would be to simply copy
            the class it into your code (remember that the class must be named
            org.powermock.api.extension.proxyframework.ProxyFrameworkImpl).
        -->
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-easymock</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.easymock</groupId>
                    <artifactId>easymock</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>
        
        <!--
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.7.0</version>
        </dependency>
        -->
        
    </dependencies>
    
    
    <!-- XXX Migration -->
    <!--
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    -->
    
</project>
